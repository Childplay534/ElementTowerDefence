#BlueJ class context
comment0.params=startX\ startY\ endX\ endY\ world
comment0.target=Pathfind(int,\ int,\ int,\ int,\ Map)
comment1.params=
comment1.target=void\ reset()
comment2.params=
comment2.target=void\ findPath()
comment2.text=\r\n\ finds\ the\ path\ from\ start\ to\ end\ <br>\r\n\ the\ main\ A*\ method\ <br>\r\n\ if\ there\ is\ no\ path,\ path\ will\ be\ null\r\n
comment3.params=x\ y\ passible
comment3.target=Pathfind.Node\ makeNode(int,\ int,\ boolean)
comment3.text=\r\n\ checks\ if\ the\ x\ and\ y\ coodinates\ are\ legit,\ then\ makes\ a\ new\ node\ there\r\n
comment4.params=
comment4.target=Pathfind.Node\ findBestNode()
comment4.text=\r\n\ finds\ the\ best\ node,\ the\ closest\ node\ to\ the\ finish\r\n
comment5.params=node
comment5.target=void\ setPath(Pathfind.Node)
comment5.text=\r\n\ after\ finding\ the\ path,\ recrusively\ sets\ the\ path\r\n
comment6.params=
comment6.target=java.util.ArrayList\ generatePath()
comment6.text=\r\n\ call\ upon\ this\ to\ generate\ a\ path\ <br>\r\n\ it\ returns\ the\ best\ possible\ path,\ with\ the\ A*\ pathfinding\ algorithm\r\n
comment7.params=
comment7.target=void\ printFinalPath()
comment7.text=\r\n\ prints\ out\ the\ path\ it\ takes\r\n\ debugging\ purposes\r\n
comment8.params=
comment8.target=void\ printScore()
comment8.text=\r\n\ prints\ out\ the\ paths\ that\ it\ searched\ through\r\n\ debugging\ purposes\r\n
numComments=9
